name: "Deploy"

on:
  push:
    branches: [master]

permissions:
  contents: read

concurrency:
  group: deployment
  cancel-in-progress: false

jobs:
  changes:
    name: detect-changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.changes.outputs.api }}
      client: ${{ steps.changes.outputs.client }}
      shared: ${{ steps.changes.outputs.shared }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            api:
              - 'apps/api/**'
            client:
              - 'apps/client/**'
            shared:
              - '.github/workflows/deploy.yml'
              - 'packages/**'
              - 'package.json'
              - 'yarn.lock'
              - 'turbo.json'
              - '.nvmrc'

  setup:
    name: setup
    runs-on: ubuntu-latest
    if: needs.changes.outputs.client == 'true' || needs.changes.outputs.api == 'true' || needs.changes.outputs.shared == 'true'
    needs: changes
    steps:
      - uses: actions/checkout@v5
      - name: Setup node
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: ".nvmrc"
      - name: Cache node_modules
        uses: actions/cache@v4.3.0
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ github.run_id }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

  check-types:
    name: check-types
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v5
      - name: Setup node
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: ".nvmrc"
      - name: Restore cache
        uses: actions/cache@v4.3.0
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ github.run_id }}-${{ hashFiles('**/yarn.lock') }}
      - name: Check Types
        run: yarn check-types

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v5
      - name: Setup node
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: ".nvmrc"
      - name: Restore cache
        uses: actions/cache@v4.3.0
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ github.run_id }}-${{ hashFiles('**/yarn.lock') }}
      - name: Lint Code
        run: yarn lint

  build-api:
    name: build-api
    runs-on: ubuntu-latest
    if: needs.changes.outputs.api == 'true' || needs.changes.outputs.shared == 'true'
    needs: [setup, check-types, lint, changes]
    env:
      RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup node
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: ".nvmrc"
      - name: Restore cache
        uses: actions/cache@v4.3.0
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ github.run_id }}-${{ hashFiles('**/yarn.lock') }}
      - name: Build
        run: |
          yarn global add @railway/cli
          railway link --project=${{ vars.RAILWAY_PROJECT_ID }} --service=${{ vars.RAILWAY_API_SERVICE_ID}}
          railway run yarn build --filter api

  deploy-api:
    name: deploy-api
    runs-on: ubuntu-latest
    needs: [build-api]
    container: ghcr.io/railwayapp/cli:latest
    environment: production
    env:
      RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v5
      - name: Deploy API
        run: |
          railway link --project=${{ vars.RAILWAY_PROJECT_ID }} --service=${{ vars.RAILWAY_API_SERVICE_ID}}
          railway up

  build-client:
    name: build-client
    runs-on: ubuntu-latest
    if: needs.changes.outputs.client == 'true' || needs.changes.outputs.shared == 'true'
    needs: [setup, check-types, lint, changes]
    env:
      RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup node
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: ".nvmrc"
      - name: Restore cache
        uses: actions/cache@v4.3.0
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ github.run_id }}-${{ hashFiles('**/yarn.lock') }}
      - name: Build
        run: |
          yarn global add @railway/cli
          railway link --project=${{ vars.RAILWAY_PROJECT_ID }} --service=${{ vars.RAILWAY_CLIENT_SERVICE_ID }}
          railway run yarn build --filter client

  deploy-client:
    name: deploy-client
    runs-on: ubuntu-latest
    needs: [build-client]
    container: ghcr.io/railwayapp/cli:latest
    environment: production
    env:
      RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v5
      - name: Deploy Client
        run: |
          railway link --project=${{ vars.RAILWAY_PROJECT_ID }} --service=${{ vars.RAILWAY_CLIENT_SERVICE_ID }}
          railway up
