/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface ShortnApiKeys {
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  isActive: Generated<boolean>;
  keyHash: string;
  lastFour: string;
  lastUsedAt: Timestamp;
  name: string;
  updatedAt: Generated<Timestamp>;
  userId: number;
}

export interface ShortnUrls {
  createdAt: Generated<Timestamp>;
  id: Generated<number>;
  url: string;
}

export interface ShortnUsers {
  createdAt: Generated<Timestamp>;
  email: string;
  fullName: string;
  id: Generated<number>;
  password: string;
  updatedAt: Generated<Timestamp>;
}

export interface DB {
  "shortn.apiKeys": ShortnApiKeys;
  "shortn.urls": ShortnUrls;
  "shortn.users": ShortnUsers;
}
